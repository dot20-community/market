// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Status {
  PENDING
  CANCELING
  CANCELED
  LISTING
  LOCKED
  SOLD
  FAILED
}

enum ChainStatus {
  PENDING // 挂单中
  SELL_BLOCK_CONFIRMED // 卖单区块已确认
  SELL_BLOCK_FAILED // 卖单区块确认失败
  // SELL_INSCRIBE_CONFIRMED // 卖单铭文索引确认成功
  // SELL_INSCRIBE_FAILED // 卖单铭文索引确认失败
  CANCEL_BLOCK_CONFIRMED // 取消挂单区块已确认
  CANCEL_BLOCK_FAILED // 取消挂单区块确认失败
  // CANCEL_INSCRIBE_CONFIRMED // 取消挂单铭文索引确认成功
  // CANCEL_INSCRIBE_FAILED // 取消挂单铭文索引确认失败
  BUY_BLOCK_CONFIRMED // 买单区块已确认
  BUY_BLOCK_FAILED // 买单区块确认失败
  TRADE_BLOCK_CONFIRMED // 交易成功转账铭文给买家的区块已确认
  TRADE_BLOCK_FAILED // 交易成功转账铭文给买家的区块确认失败
}

model Asset {
  id        BigInt   @id @default(autoincrement())
  assetId   String   @map("asset_id") @db.VarChar(32)
  name      String   @db.VarChar(128)
  symbol    String   @db.VarChar(32)
  decimals  Int
  holder    Int      @default(0)
  supply    Decimal  @default(0) @db.Decimal(64, 0)
  createdAt DateTime @map("created_at")
  updatedAt DateTime @map("updated_at")

  @@unique([assetId])
  @@map("assets")
}

model Order {
  id             BigInt      @id @default(autoincrement())
  seller         String      @db.VarChar(64)
  buyer          String?     @db.VarChar(64)
  assetId        String      @map("asset_id") @db.VarChar(32)
  amount         Decimal     @db.Decimal(64, 0)
  status         Status      @default(PENDING)
  chainStatus    ChainStatus @default(PENDING) @map("chain_status")
  failReason     String?     @map("fail_reason")
  totalPrice     Decimal     @map("total_price") @db.Decimal(64, 0)
  buyServiceFee  Decimal     @default(0) @map("buy_service_fee") @db.Decimal(64, 0)
  buyPayPrice    Decimal     @default(0) @map("buy_pay_price") @db.Decimal(64, 0)
  sellServiceFee Decimal     @default(0) @map("sell_service_fee") @db.Decimal(64, 0)
  sellPayPrice   Decimal     @default(0) @map("sell_pay_price") @db.Decimal(64, 0)
  sellHash       String      @map("sell_hash") // 卖单区块哈希
  buyHash        String?     @map("buy_hash") // 买单区块哈希
  tradeHash      String?     @map("trade_hash") // 交易成功转账铭文给买家的哈希
  cancelHash     String?     @map("cancel_hash") // 取消挂单转账铭文给卖家的哈希
  listingAt      DateTime?   @map("listing_at")
  soldAt         DateTime?   @map("sold_at")
  canceledAt     DateTime?   @map("canceled_at")
  createdAt      DateTime    @map("created_at")
  updatedAt      DateTime    @map("updated_at")

  @@index([seller])
  @@index([buyer])
  @@map("orders")
}
